apiVersion: apps/v1
kind: Deployment
metadata:
  name: datapower-operator
  labels:
    app.kubernetes.io/instance: {{ template "datapower-operator.namespacedname" . }}
    app.kubernetes.io/name: datapower-operator
    app.kubernetes.io/managed-by: datapower-operator
spec:
  replicas: {{ .Values.operator.replicas }}
  selector:
    matchLabels:
      name: datapower-operator
      app.kubernetes.io/instance: {{ template "datapower-operator.namespacedname" . }}
      app.kubernetes.io/name: datapower-operator
      app.kubernetes.io/managed-by: datapower-operator
  template:
    metadata:
      labels:
        name: datapower-operator
        app.kubernetes.io/instance: {{ template "datapower-operator.namespacedname" . }}
        app.kubernetes.io/name: datapower-operator
        app.kubernetes.io/managed-by: datapower-operator
      annotations:
        productID: "64a541a8e6d44869ba790cbafb937f7a"
        productName: "IBM DataPower Operator"
        productMetric: "FREE"
        productChargedContainers: ""
        productVersion: 1.16.0
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/arch"
                operator: In
                values: ["amd64"]
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/instance: {{ template "datapower-operator.namespacedname" . }}
            app.kubernetes.io/name: datapower-operator
            app.kubernetes.io/managed-by: datapower-operator
      hostNetwork: false
      hostPID: false
      hostIPC: false
      serviceAccountName: datapower-operator
      containers:
        - name: datapower-operator
          # Replace this with the built image name
          image: {{ .Values.operator.image.repository }}:{{ .Values.operator.image.tag }}
          command:
          - /datapower-operator
          args:
          - "--leader-elect"
          - "--zap-encoder=json"
          - "--zap-log-level={{ .Values.operator.logLevel }}"
          - "--zap-time-encoding=rfc3339nano"
          imagePullPolicy: {{ .Values.operator.image.pullPolicy }}
          volumeMounts:
          - mountPath: /opt/ibm/datapower/operator
            name: operator-volume
          env:
            - name: WATCH_NAMESPACE
{{ include "datapower-operator.getWatchNamespace" . | indent 14 }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OPERATOR_NAME
              value: "datapower-operator"
            - name: NAMESPACED_NAME
              value: {{ template "datapower-operator.namespacedname" . }}
            - name: IBM_ENTITLED_REGISTRY
              value: {{ .Values.operator.entitledPullRegistry | default "cp.icr.io/cp/datapower" | quote }}
            - name: IBM_FREE_REGISTRY_DATAPOWER
              value: {{ .Values.operator.freeDataPowerRegistry | default "icr.io/cpopen/datapower" | quote }}
            - name: IBM_FREE_REGISTRY_CPOPEN
              value: {{ .Values.operator.freeCpOpenRegistry | default "icr.io/cpopen" | quote }}
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: 2
              memory: "2Gi"
          securityContext:
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      volumes:
      - emptyDir: {}
        name: operator-volume
