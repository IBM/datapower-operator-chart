apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2021-03-30T21:20:48Z"
  labels:
    app.kubernetes.io/instance: datapower-operator
    app.kubernetes.io/managed-by: datapower-operator
    app.kubernetes.io/name: datapowermonitors.datapower.ibm.com
  name: datapowermonitors.datapower.ibm.com
spec:
  group: datapower.ibm.com
  names:
    categories:
      - all
      - apic
      - integration
      - cp4i
    kind: DataPowerMonitor
    listKind: DataPowerMonitorList
    plural: datapowermonitors
    shortNames:
      - dpm
    singular: datapowermonitor
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: DataPowerMonitor phase
          jsonPath: .status.phase
          name: Phase
          type: string
        - description: Last Pod event
          jsonPath: .status.lastEvent
          name: Last Event
          type: string
        - description: Work is pending
          jsonPath: .status.workPending
          name: Work Pending
          type: boolean
        - description: Work is in-progress
          jsonPath: .status.workInProgress
          name: Work In-Progress
          type: boolean
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: 'DataPowerMonitor provides an API for monitoring the DataPower StatefulSet. API version: v1beta2 Documentation: https://ibm.biz/BdqUZr License: https://ibm.biz/Bdf2Y5'
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: DataPowerMonitorSpec defines the desired state of DataPowerMonitor
              properties:
                lifecycleDebounceMs:
                  description: Set the lifecycle debounce in milliseconds
                  format: int32
                  minimum: 1000
                  type: integer
                monitorGatewayPeering:
                  description: Enables the peering status monitoring functionality in the DataPowerMonitor
                  type: boolean
                peeringRecoveryCheckIntervalMs:
                  description: Set the peering recovery interval in milliseconds
                  format: int32
                  minimum: 1000
                  type: integer
              type: object
            status:
              description: DataPowerMonitorStatus defines the observed state of DataPowerMonitor
              properties:
                conditions:
                  description: Conditions represent the latest available observations of the DataPowerMonitor's state
                  items:
                    description: "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API."
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        description: ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
                        type: string
                      status:
                        type: string
                      type:
                        description: "ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\"."
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                lastEvent:
                  description: Timestamp of last Pod event in RFC 3339 format
                  type: string
                phase:
                  description: Phase of the DataPowerMonitor instance
                  enum:
                    - Pending
                    - Running
                    - Failed
                  type: string
                workInProgress:
                  description: Boolean to signal that work is in-progress on this instance
                  type: boolean
                workPending:
                  description: Boolean to signal that work is pending on this instance
                  type: boolean
              required:
                - conditions
                - lastEvent
                - phase
                - workInProgress
                - workPending
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  preserveUnknownFields: false
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
